# Upgraded Heavy
- type: entity
  parent: [ BaseXenoborgChassis, BaseXenoborgTransponder ]
  id: XenoborgHeavyUpgraded
  name: heavy xenoborg
  suffix: upgraded
  description: A man-machine hybrid that will accomplish its creators goals at all costs, whoever and whatever that is. This type is has heavy lasers and is covered in thick armor plates. It may be tougher, but its speed matches its brawn. This one seems stronger then a usual model.
  components:
  - type: BorgTransponder
    name: heavy xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_heavy
  - type: Sprite
    layers:
    - state: xenoborg_heavy
    - state: xenoborg_heavy_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
    - state: xenoborg_heavy_l
      shader: unshaded
      map: ["light"]
      visible: false
  - type: BorgChassis
    maxModules: 4
    hasMindState: xenoborg_heavy_e
    noMindState: xenoborg_heavy_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleHeavy
  - type: MovementSpeedModifier # slower
    baseWalkSpeed : 1.2
    baseSprintSpeed : 2.2
  - type: FlashImmunity
  - type: MobThresholds # tankier
    thresholds:
      0: Alive
      300: Critical
      500: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 190
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 750
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Repairable
    doAfterDelay: 15
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleHeavyLaser
      - XenoborgModuleJammer
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellMicroreactor

# Autopulser Heavy Subtype
- type: entity
  parent: [ BaseXenoborgChassis, BaseXenoborgTransponder ]
  id: XenoborgHeavyAutopulserSubtype
  name: heavy xenoborg
  suffix: subtype, autopulser
  description: A man-machine hybrid that will accomplish its creators goals at all costs, whoever and whatever that is. This type is has a Autopulser and is covered in thick armor plates. This one seems more different then a usual model.
  components:
  - type: BorgTransponder
    name: heavy xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_heavy
  - type: Sprite
    layers:
    - state: xenoborg_heavy
    - state: xenoborg_heavy_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
    - state: xenoborg_heavy_l
      shader: unshaded
      map: ["light"]
      visible: false
  - type: BorgChassis
    maxModules: 4
    hasMindState: xenoborg_heavy_e
    noMindState: xenoborg_heavy_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleHeavy
  - type: MovementSpeedModifier # Slightly faster than a Heavy Xenoborg to compensate for it's weakness.
    baseWalkSpeed : 1.8
    baseSprintSpeed : 3
  - type: FlashImmunity
  - type: MobThresholds # Higher fire-rate than a Heavy Xenoborg, but weaker.
    thresholds:
      0: Alive
      200: Critical
      300: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 180
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 750
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Repairable
    doAfterDelay: 15
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleAutopulser
      - XenoborgModuleJammer
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHyper

- type: entity
  parent: [ BaseXenoborgChassis, BaseXenoborgTransponder ]
  id: XenoborgScoutUpgraded
  name: scout upgraded xenoborg
  suffix: with brain
  description: A man-machine hybrid that will accomplish its creators goals at all costs, whoever and whatever that is. This is a scout type, its nimble thrusters allow it to move quickly through space. This one seems stronger then a usual model.
  components:
  - type: BorgTransponder
    name: scout xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_scout
  - type: Sprite
    layers:
      - state: xenoborg_scout
      - state: xenoborg_scout_e
        map: ["enum.BorgVisualLayers.Light"]
        shader: unshaded
        visible: false
      - state: xenoborg_scout_l
        shader: unshaded
        map: ["light"]
        visible: false
  - type: FootstepModifier # it flies instead of walking
    footstepSoundCollection:
      collection: FootstepHoverXenoborg
  - type: FlashImmunity
  - type: BorgChassis
    maxModules: 4
    hasMindState: xenoborg_scout_e
    noMindState: xenoborg_scout_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleScout
  - type: MovementSpeedModifier # faster
    baseWalkSpeed : 5
    baseSprintSpeed : 10
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleEnergySword
      - XenoborgModuleSpaceMovement
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellMicroreactor
  - type: MobThresholds # tankier
    thresholds:
      0: Alive
      150: Critical
      300: Dead

- type: entity
  parent: [ BaseXenoborgChassis, BaseXenoborgTransponder ]
  id: XenoborgStealthUpgraded
  name: stealth upgraded xenoborg
  suffix: with brain
  description: A man-machine hybrid that will accomplish its creators goals at all costs, whoever and whatever that is. This one is a stealth type. Its armor shimmers in the light like no other material you've seen. This one seems stronger then a usual model.
  components:
  - type: BorgTransponder
    name: stealth xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_stealth
  - type: Sprite
    layers:
      - state: xenoborg_stealth
      - state: xenoborg_stealth_e
        map: ["enum.BorgVisualLayers.Light"]
        shader: unshaded
        visible: false
      - state: xenoborg_stealth_l
        shader: unshaded
        map: ["light"]
        visible: false
  - type: FootstepModifier # it flies instead of walking
    footstepSoundCollection:
      collection: FootstepHoverXenoborg
  - type: BorgChassis
    maxModules: 5
    hasMindState: xenoborg_stealth_e
    noMindState: xenoborg_stealth_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleStealth
  - type: MovementAlwaysTouching # it flies in space with tiny thrusters
  # - type: SpamEmitSound # longer interval to make the creppy sound
  #   minInterval: 50
  #   maxInterval: 150
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleHypo
      - XenoborgModuleChameleonProjector
      - XenoborgModuleSuperCloakDevice
      - BorgModuleSyndicateWeapon
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellMicroreactor
  - type: MobThresholds # tankier
    thresholds:
      0: Alive
      150: Critical
      300: Dead

- type: entity
  parent: [ BaseXenoborgChassis, BaseXenoborgTransponder ]
  id: XenoborgJanitor
  name: janitor xenoborg
  suffix: with brain
  description: A man-machine hybrid that will accomplish its creators goals at all costs, whoever and whatever that is. This type is... A JANITOR??? AND WHY DOES IT HAVE A CLAW ON IT??? WHAT THE FU-
  components:
  - type: BorgTransponder
    name: janitor xenoborg
    sprite:
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
      state: xenoborg_janitor
  - type: Sprite
    layers:
    - state: xenoborg_janitor
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
    - state: xenoborg_janitor_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
    - state: xenoborg_janitor_l
      shader: unshaded
      map: ["light"]
      visible: false
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
  - type: BorgChassis
    maxModules: 4
    hasMindState: xenoborg_janitor_e
    noMindState: xenoborg_janitor_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
  - type: FlashImmunity
  - type: MobThresholds # It's just a janitor, doesn't need too much HP.
    thresholds:
      0: Alive
      20: Critical # die
      50: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 190
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer_xenoborg.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 150
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Repairable
    doAfterDelay: 2 # You MUST clean.
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleJanitor
      - BorgModuleSyndicateWeapon # THE JANITOR CAN NOT BE STOPPED. WHAT THE FUCK IS A KILOMETER!!!!!!!!!!!!
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellMicroreactor # THE CLEANING WILL NOT BE STOPPED

- type: entity
  parent: XenoborgJanitor
  id: XenoborgJanitorPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleJanitor
      - BorgModuleSyndicateWeapon # THE JANITOR CAN NOT BE STOPPED. WHAT THE FUCK IS A KILOMETER!!!!!!!!!!!!
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted

- type: entity
  parent: [ BaseXenoborgChassis, BaseXenoborgTransponder ]
  id: XenoborgBomber
  name: bomber xenoborg
  suffix: with brain
  description: A man-machine hybrid that will accomplish its creators goals at all costs, whoever and whatever that is. This type seems rather small, and has a tiny bomb attached to it... wait, is it ticking?
  components:
  - type: BorgTransponder
    name: bomber xenoborg
    sprite:
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
      state: xenoborg_bomber_moving # dont know why it isn't moving automatically, just gonna have this be the default.
  - type: Sprite
    layers:
    - state: xenoborg_bomber_moving
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
    - state: xenoborg_bomber_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
    - state: xenoborg_bomber_l
      shader: unshaded
      map: ["light"]
      visible: false
      sprite: _Devilstation/Mobs/Silicon/chassis.rsi
  - type: BorgChassis
    maxModules: 4
    hasMindState: xenoborg_bomber_e
    noMindState: xenoborg_bomber_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
  - type: FlashImmunity
  - type: MobThresholds # Smol
    thresholds:
      0: Alive
      10: Critical # die
      15: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 190
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer_xenoborg.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 150
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Repairable
    doAfterDelay: 2 # smol boi
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - BorgModuleXenoborgBomber
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellSmall # Make it count!

- type: entity
  parent: XenoborgBomber
  id: XenoborgBomberPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - BorgModuleXenoborgBomber
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellSmallPrinted
